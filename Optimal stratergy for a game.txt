Optimal stratergy for a game

problem -> given an array of numbers, two people will pick the end elements one by one, we need to find the maximum sum that we can get asuming that the opponent is equally capable.

soluito->

recursion->

we pass the starting and ending index to the function and do the following operation

res=maX(arr[i](we pick i)+min(rec(i+2,j)(he also pick i),rec(i+1,j-1)(he picks j)),arr[j](we pick j)+min(rec(i+1,j-1)(he picks i),rec(i,j-2)(he picks j)))


Dp solution

we make a 2d matix of nXn and we intialis the indies i,i+1 as max of arr[i],arr[i+1]  now we need to move in a diagnal manner 

which will be done by the follwing code

for(int gap=3;gap<n;gap+=2){
for(int i=0;i<i+gap<n;i++){
int j=i+gap;
dp[i][j]=max(arr[i]+min(dp[i+2][j],dp[i+1][j-1]),arr[j]+min(dp[i+1][j-1],dp[i][j-2])))  (same logic as recursive code)
}
}


reutrn dp[0][3]

(as in the recursive call we will call for 0,n-1 as the base call)